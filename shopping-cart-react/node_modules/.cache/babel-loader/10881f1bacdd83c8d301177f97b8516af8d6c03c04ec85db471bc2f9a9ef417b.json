{"ast":null,"code":"var _jsxFileName = \"E:\\\\Momo Work\\\\shopping-cart-react\\\\src\\\\context\\\\shop-context.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from \"react\";\nimport { PRODUCTS } from \"../products\";\n\n//export const ShopContext = createContext(null);\n//const [fontSize, setFontSize] = useState(\"16px\");\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst changeFontSize = newSize => {\n  setFontSize(newSize);\n};\nconst getDefaultCart = () => {\n  let cart = {};\n  for (let i = 1; i < PRODUCTS.length + 1; i++) {\n    cart[i] = 0;\n  }\n  return cart;\n};\nexport const ShopContextProvider = props => {\n  _s();\n  const [cartItems, setCartItems] = useState(getDefaultCart());\n  const getTotalCartAmount = () => {\n    let totalAmount = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        let itemInfo = PRODUCTS.find(product => product.id === Number(item));\n        totalAmount += cartItems[item] * itemInfo.price;\n      }\n    }\n    return totalAmount;\n  };\n  const addToCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] + 1\n    }));\n  };\n  const removeFromCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] - 1\n    }));\n  };\n  const updateCartItemCount = (newAmount, itemId) => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: newAmount\n    }));\n  };\n  const checkout = () => {\n    setCartItems(getDefaultCart());\n  };\n  const contextValue = {\n    cartItems,\n    addToCart,\n    updateCartItemCount,\n    removeFromCart,\n    getTotalCartAmount,\n    checkout\n    //fontSize,\n    //changeFontSize,\n  };\n\n  return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(ShopContextProvider, \"POXtcbMWIUF6U9Hbv2D9xpykgJ8=\");\n_c = ShopContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ShopContextProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","PRODUCTS","changeFontSize","newSize","setFontSize","getDefaultCart","cart","i","length","ShopContextProvider","props","cartItems","setCartItems","getTotalCartAmount","totalAmount","item","itemInfo","find","product","id","Number","price","addToCart","itemId","prev","removeFromCart","updateCartItemCount","newAmount","checkout","contextValue","children"],"sources":["E:/Momo Work/shopping-cart-react/src/context/shop-context.jsx"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\r\nimport { PRODUCTS } from \"../products\";\r\n\r\n//export const ShopContext = createContext(null);\r\n//const [fontSize, setFontSize] = useState(\"16px\");\r\n\r\nconst changeFontSize = (newSize) => {\r\n  setFontSize(newSize);\r\n};\r\n\r\nconst getDefaultCart = () => {\r\n  let cart = {};\r\n  for (let i = 1; i < PRODUCTS.length + 1; i++) {\r\n    cart[i] = 0;\r\n  }\r\n  return cart;\r\n};\r\n\r\nexport const ShopContextProvider = (props) => {\r\n  const [cartItems, setCartItems] = useState(getDefaultCart());\r\n\r\n  const getTotalCartAmount = () => {\r\n    let totalAmount = 0;\r\n    for (const item in cartItems) {\r\n      if (cartItems[item] > 0) {\r\n        let itemInfo = PRODUCTS.find((product) => product.id === Number(item));\r\n        totalAmount += cartItems[item] * itemInfo.price;\r\n      }\r\n    }\r\n    return totalAmount;\r\n  };\r\n\r\n  const addToCart = (itemId) => {\r\n    setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] + 1 }));\r\n  };\r\n\r\n  const removeFromCart = (itemId) => {\r\n    setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] - 1 }));\r\n  };\r\n\r\n  const updateCartItemCount = (newAmount, itemId) => {\r\n    setCartItems((prev) => ({ ...prev, [itemId]: newAmount }));\r\n  };\r\n\r\n  const checkout = () => {\r\n    setCartItems(getDefaultCart());\r\n  };\r\n\r\n  const contextValue = {\r\n    cartItems,\r\n    addToCart,\r\n    updateCartItemCount,\r\n    removeFromCart,\r\n    getTotalCartAmount,\r\n    checkout,\r\n    //fontSize,\r\n    //changeFontSize,\r\n  };\r\n\r\n  return (\r\n    <ShopContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </ShopContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,QAAQ,QAAQ,aAAa;;AAEtC;AACA;AAAA;AAEA,MAAMC,cAAc,GAAIC,OAAO,IAAK;EAClCC,WAAW,CAACD,OAAO,CAAC;AACtB,CAAC;AAED,MAAME,cAAc,GAAG,MAAM;EAC3B,IAAIC,IAAI,GAAG,CAAC,CAAC;EACb,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,QAAQ,CAACO,MAAM,GAAG,CAAC,EAAED,CAAC,EAAE,EAAE;IAC5CD,IAAI,CAACC,CAAC,CAAC,GAAG,CAAC;EACb;EACA,OAAOD,IAAI;AACb,CAAC;AAED,OAAO,MAAMG,mBAAmB,GAAIC,KAAK,IAAK;EAAA;EAC5C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAACK,cAAc,EAAE,CAAC;EAE5D,MAAMQ,kBAAkB,GAAG,MAAM;IAC/B,IAAIC,WAAW,GAAG,CAAC;IACnB,KAAK,MAAMC,IAAI,IAAIJ,SAAS,EAAE;MAC5B,IAAIA,SAAS,CAACI,IAAI,CAAC,GAAG,CAAC,EAAE;QACvB,IAAIC,QAAQ,GAAGf,QAAQ,CAACgB,IAAI,CAAEC,OAAO,IAAKA,OAAO,CAACC,EAAE,KAAKC,MAAM,CAACL,IAAI,CAAC,CAAC;QACtED,WAAW,IAAIH,SAAS,CAACI,IAAI,CAAC,GAAGC,QAAQ,CAACK,KAAK;MACjD;IACF;IACA,OAAOP,WAAW;EACpB,CAAC;EAED,MAAMQ,SAAS,GAAIC,MAAM,IAAK;IAC5BX,YAAY,CAAEY,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACD,MAAM,GAAGC,IAAI,CAACD,MAAM,CAAC,GAAG;IAAE,CAAC,CAAC,CAAC;EACnE,CAAC;EAED,MAAME,cAAc,GAAIF,MAAM,IAAK;IACjCX,YAAY,CAAEY,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACD,MAAM,GAAGC,IAAI,CAACD,MAAM,CAAC,GAAG;IAAE,CAAC,CAAC,CAAC;EACnE,CAAC;EAED,MAAMG,mBAAmB,GAAG,CAACC,SAAS,EAAEJ,MAAM,KAAK;IACjDX,YAAY,CAAEY,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACD,MAAM,GAAGI;IAAU,CAAC,CAAC,CAAC;EAC5D,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAM;IACrBhB,YAAY,CAACP,cAAc,EAAE,CAAC;EAChC,CAAC;EAED,MAAMwB,YAAY,GAAG;IACnBlB,SAAS;IACTW,SAAS;IACTI,mBAAmB;IACnBD,cAAc;IACdZ,kBAAkB;IAClBe;IACA;IACA;EACF,CAAC;;EAED,oBACE,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAEC,YAAa;IAAA,UACvCnB,KAAK,CAACoB;EAAQ;IAAA;IAAA;IAAA;EAAA,QACM;AAE3B,CAAC;AAAC,GA9CWrB,mBAAmB;AAAA,KAAnBA,mBAAmB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}